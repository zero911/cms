<?php
/**
 * Created by PhpStorm.
 * User: ziann
 * Date: 16/3/26
 * Time: 上午12:17
 */

namespace App\Http\Controllers;

use App\Models\Methods;
use App\Models\Permission;
use App\Models\PermissionRole;
use App\Models\Role;
use App\Models\PermissionMethod;
use Illuminate\Support\Facades\Validator;
use Request;
use Input;
use Cache;
use App\Models\SystemLogger;
use Session;

class MethodController extends AdminBaseController
{
    protected $modelName = 'App\Models\Methods';
    protected $customPath = 'back.method';
    protected $customView = ['index', 'create', 'edit', 'view', 'setPermission', 'viewPermission'];
    protected $bCustomCondition = true;
    protected $aCustomConditionArray = ['is_actived' => ['=', 1]];
    protected $routeName = 'method';

    public function beforeRender()
    {
        parent::beforeRender(); // TODO: Change the autogenerated stub
        $sModel = $this->model;
        $this->setVars('_title', __('_basic.method'));
        $this->setVars('parents', $sModel::getTopMethods());
        $this->setVars('methods', $sModel::getMethods());
//        pr($sModel->getTrees());exit;
    }

    /**
     * [index 加入缓存功能]
     * @return mixed
     */
    public function index()
    {
        if (Cache::has('permission_method')) {
            $datas = Cache::get('permission_method');
        } else {
            if (is_null($this->request) || !$this->bExtraSearch) {
//            pr($this->model);exit;
                $oQuery = $this->model->where('id', '>', 0);
                //若存在页面自定义条件检索则追加where
                $oQuery = $this->bCustomCondition ? $this->model->doWhere($this->aCustomConditionArray) : $oQuery;
            } else {
                $aData = trimArray($this->request->except('_token'));
//            组装数组格式
                $aData = $this->makeSearchCondition($aData);
                $oQuery = $this->indexQuery($aData);
                $pageSize = $this->request->input('pageSize');
            }
            $pageSize = isset($pageSize) && is_numeric($pageSize) ? $pageSize : static::$pageSize;
            $datas = $oQuery->paginate($pageSize);
            Cache::put('permission_method', $datas, 60 * 24 * 7);
        }
        //分页部分
        $this->setVars('datas', $datas);
        return $this->render();
    }

    /**[编辑]
     * @param int $id
     * @return \Illuminate\Http\RedirectResponse|mixed
     */
    public function edit($id)
    {
        if (!$id) {
            return $this->goBack('error', __('_basic.visit-error'));
        }
        $sModel = $this->model;
        $oMethod = $sModel::find($id);
        if (!is_object($oMethod)) {
            return $this->goBack('error', __('_basic.method-error'));
        }
        if (Request::isMethod('post')) {
//            pr(Input::all());exit;
            $aData = trimArray(Input::all());
            //表单验证
            $validate = Validator::make($aData, $sModel::$rules);
            if (!$validate->passes()) {
                return $this->goBack('error', __('_basic.validate-error'));
            }
            $oContent = $sModel->saveContent($oMethod, $aData, false);
            $bSucc = $oContent->save();
            if($bSucc){
                SystemLogger::writeLog(Session::get('admin_user_id'),$this->request->url(),
                    $this->request->getClientIp(),$this->controller.'@'.$this->action,'编辑模块:'.$id);
                return $this->goBackToIndex('success', __('_system.method-edit-success'));
            }
            return $this->goBack('error', __('_system.method-edit-error'));
        }
        $this->setVars('method', $oMethod);
        return $this->render();
    }

    /** [浏览某个文章详情]
     * @param int $id
     * @return \Illuminate\Http\RedirectResponse|mixed
     */
    public function view($id)
    {
        if (!$id) {
            return $this->goBack('error', __('_basic.visit-error'));
        }
        $sModel = $this->model;
        $oMethod = $sModel::find($id);
        if (!is_object($oMethod)) {
            return $this->goBack('error', __('_basic.method-error'));
        }
//        pr($oArticle);exit;
        $this->setVars('oMethod', $oMethod);
        return $this->render();
    }

    /**[创建]
     * @return \Illuminate\Http\RedirectResponse|mixed
     */
    public function create()
    {

        if (Request::isMethod('post')) {
            $aData = trimArray(Input::all());
            $sModel = $this->model;
            $validate = Validator::make($aData, $sModel::$rules);
            if (!$validate->passes()) {
                return $this->goBack('error', __('_basic.method-error'));
            }
            $oMethod = $sModel->saveContent(new Methods(), $aData);
            if (!is_object($oMethod)) {
                return $this->goBack('error', __('_basic.method-exist'));
            }
            if ($bSucc = $oMethod->save()) {
                SystemLogger::writeLog(Session::get('admin_user_id'),$this->request->url(),
                    $this->request->getClientIp(),$this->controller.'@'.$this->action,'创建系统模块:'.$oMethod->id);
                return $this->goBackToIndex('success', __('_system.method-create-success'));
            } else {
                return $this->goBack('error', __('_system.method-create-error'));
            }
        }
        return $this->render();
    }

    public function setPermissionByRole($role_id)
    {
        if (!$role_id) {
            return $this->goBack('error', __('_basic.visit-error'));
        }
        $oRole = Role::find($role_id);
        if (!is_object($oRole)) {
            return $this->goBack('error', __('_user.role-error'));
        }
        if (Request::isMethod('post')) {
            $aData = trimArray(Input::all());
            //调用设置模块权限函数
            $this->setPermissions($aData, $role_id);
            SystemLogger::writeLog(Session::get('admin_user_id'),$this->request->url(),
                $this->request->getClientIp(),$this->controller.'@'.$this->action,'设置模块权限:');
            return $this->goBack('info', __('_system.method-permission-set'));
        }
        $oMethods = $this->model;
        //所有模块的权限
        $aAllMethodPermission = $oMethods::methodPermissions();
        //得到当前角色拥有的权限
/*        $aPermissionIds = PermissionRole::getPermissionIdByRoleId($role_id);
        $aHasMethodPermission = $oMethods::roleHasMethodPermissions($aPermissionIds);
        $methodPermissions=array_merge($aAllMethodPermission,$aHasMethodPermission);
        pr($methodPermissions);exit;*/
        $this->setVars('methodPermissions', $aAllMethodPermission);
        $this->view = 'back.method.setPermission';
        return $this->render();
    }

    public function viewPermissionByRole($role_id)
    {
        if (!$role_id) {
            return $this->goBack('error', __('_basic.visit-error'));
        }
        $oRole = Role::find($role_id);
        if (!is_object($oRole)) {
            return $this->goBack('error', __('_user.role-error'));
        }
        $aPermissionIds = PermissionRole::getPermissionIdByRoleId($role_id);
        $aMethodWithPermission = Methods::roleHasMethodPermissions($aPermissionIds);
        $this->setVars('methodPermissions', $aMethodWithPermission);
        $this->view = 'back.method.viewPermission';
        return $this->render();
    }

    private function setPermissions($aData, $role_id)
    {
//        pr($aData);exit;
        $oMethods=new Methods();
        $oPermission=new Permission();
        $aPer_ids = $aData['per_id'];
        foreach ($aPer_ids as $val) {
            foreach ($val as $key => $item) {
                $oPermissionMethods = new PermissionMethod;
                $oPermissionRole = new PermissionRole();
                #保存到权限模块关联表数据
                $oPermissionMethods->method_id = $key;
                $oPermissionMethods->method_name = $oMethods->find($key)->name;
                $oPermissionMethods->permission_id = $item;
                $oPermissionMethods->permission_name = $oPermission->find($item)->display_name;
                $oPermissionMethods->save();
                #角色关联表保存数据
                $oPermissionRole->role_id = $role_id;
                $oPermissionRole->permission_id = $oPermissionMethods->id;
                $oPermissionRole->save();
            }
        }
    }
}