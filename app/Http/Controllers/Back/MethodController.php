<?php
/**
 * Created by PhpStorm.
 * User: ziann
 * Date: 16/3/26
 * Time: 上午12:17
 */

namespace App\Http\Controllers;


use App\Models\Articles;
use App\Models\Methods;
use App\Models\Metas;
use Illuminate\Support\Facades\Validator;
use Request;
use Input;
use Cache;

class MethodController extends AdminBaseController
{
    protected $modelName = 'App\Models\Methods';
    protected $customPath = 'back.method';
    protected $customView = ['index', 'create', 'edit', 'view'];
    protected $bCustomCondition = true;
    protected $aCustomConditionArray = ['is_actived' => ['=', 1]];
    protected $routeName='method';

    public function beforeRender()
    {
        parent::beforeRender(); // TODO: Change the autogenerated stub
        $sModel = $this->model;
        $this->setVars('_title', __('_basic.method'));
        $this->setVars('parents',$sModel::getTopMethods());
        $this->setVars('methods',$sModel::getMethods());
    }

    /**
     * [index 加入缓存功能]
     * @return mixed
     */
    public function index()
    {

        if (Cache::has('permission_method')) {
            $datas = Cache::get('permission_method');
        } else {
            if (is_null($this->request) || !$this->bExtraSearch) {
//            pr($this->model);exit;
                $oQuery = $this->model->where('id', '>', 0);
                //若存在页面自定义条件检索则追加where
                $oQuery = $this->bCustomCondition ? $this->model->doWhere($this->aCustomConditionArray) : $oQuery;
            } else {
                $aData = trimArray($this->request->except('_token'));
//            组装数组格式
                $aData = $this->makeSearchCondition($aData);
                $oQuery = $this->indexQuery($aData);
                $pageSize = $this->request->input('pageSize');
            }
            $pageSize = isset($pageSize) && is_numeric($pageSize) ? $pageSize : static::$pageSize;
            $datas = $oQuery->paginate($pageSize);
            Cache::put('permission_method', $datas, 60 * 24 * 7);
        }
        //分页部分
        $this->setVars('datas', $datas);
        return $this->render();
    }

    /**[编辑]
     * @param int $id
     * @return \Illuminate\Http\RedirectResponse|mixed
     */
    public function edit($id)
    {
        if (!$id) {
            return $this->goBack('error', __('_basic.visit-error'));
        }
        $sModel = $this->model;
        $oMethod = $sModel::find($id);
        if (!is_object($oMethod)) {
            return $this->goBack('error', __('_basic.method-error'));
        }
        if (Request::isMethod('post')) {
//            pr(Input::all());exit;
            $aData = trimArray(Input::all());
            //表单验证
            $validate = Validator::make($aData, $sModel::$rules);
            if (!$validate->passes()) {
                return $this->goBack('error', __('_basic.validate-error'));
            }
            $oContent = $sModel->saveContent($oMethod, $aData, false);
            $bSucc=$oContent->save();
            return $bSucc ? $this->goBackToIndex('success', __('_system.method-edit-success')) :
                $this->goBack('error', __('_system.method-edit-error'));
        }
        $this->setVars('method', $oMethod);
        return $this->render();
    }

    /** [浏览某个文章详情]
     * @param int $id
     * @return \Illuminate\Http\RedirectResponse|mixed
     */
    public function view($id)
    {
        if (!$id) {
            return $this->goBack('error', __('_basic.visit-error'));
        }
        $sModel = $this->model;
        $oMethod = $sModel::find($id);
        if (!is_object($oMethod)) {
            return $this->goBack('error', __('_basic.method-error'));
        }
//        pr($oArticle);exit;
        $this->setVars('oMethod', $oMethod);
        return $this->render();
    }

    /**[创建]
     * @return \Illuminate\Http\RedirectResponse|mixed
     */
    public function create(){

        if(Request::isMethod('post')){
            $aData=trimArray(Input::all());
            $sModel=$this->model;
            $validate=Validator::make($aData,$sModel::$rules);
            if(!$validate->passes()){
                return $this->goBack('error',__('_basic.method-error'));
            }
            $oMethod=$sModel->saveContent(new Methods(),$aData);
            if(!is_object($oMethod)){
                return $this->goBack('error', __('_basic.method-exist'));
            }
            if($bSucc=$oMethod->save()){

                return $this->goBackToIndex('success', __('_system.method-create-success'));
            }else{
                return $this->goBack('error', __('_system.method-create-error'));
            }
        }
        return $this->render();
    }

    /** [删除]
     * @param null $ids
     * @return \Illuminate\Http\RedirectResponse
     */
    public function destroy($ids){
        $bSucc=$this->delete($ids);
        return $bSucc ? $this->goBackToIndex('success', __('_system.method-destroy-success')) :
            $this->goBack('error', __('_system.method-destroy-error'));
    }
}