<?php
/**
 * Created by PhpStorm.
 * User: ziann
 * Date: 16/3/26
 * Time: 上午12:17
 */

namespace App\Http\Controllers;

use Illuminate\Support\Facades\Validator;
use Request;
use Input;
use Cache;
use Session;
use App\Models\Permission;

class PermissionController extends AdminBaseController
{
    protected $modelName = 'App\Models\Permission';
    protected $customPath = 'back.permission';
    protected $customView = ['index', 'create', 'edit', 'view',];
    protected $routeName = 'permission';
/*    protected $bCustomCondition = true;//页面前提条件是否开启
    protected $aCustomConditionArray = [];// 分配到页面的数据数组*/

    public function beforeRender()
    {
        parent::beforeRender(); // TODO: Change the autogenerated stub
        $sModel = $this->model;
        $this->setVars('types',$sModel::$permissionType);
        $this->setVars('_title', __('_user.permission'));
    }


    /**[编辑]
     * @param int $id
     * @return \Illuminate\Http\RedirectResponse|mixed
     */
    public function edit($id)
    {
        if (!$id) {
            return $this->goBack('error', __('_basic.visit-error'));
        }
        $sModel = $this->model;
        $oPermission = $sModel::find($id);
        if (!is_object($oPermission)) {
            return $this->goBack('error', __('_user.permission-error'));
        }
        if (Request::isMethod('post')) {
//            pr(Input::all());exit;
            $aData = trimArray(Input::all());
            //表单验证
            $validate = Validator::make($aData, $sModel::$rules);
            if (!$validate->passes()) {
                return $this->goBack('error', __('_basic.validate-error'));
            }
            $oContent = $sModel->saveContent($oPermission, $aData, false);
            $bSucc = $oContent->save();
            return $bSucc ? $this->goBackToIndex('success', __('_user.permission-edit-success')) :
                $this->goBack('error', __('_user.permission-edit-error'));
        }
        $this->setVars('permission', $oPermission);
        return $this->render();
    }

    /** [浏览某个文章详情]
     * @param int $id
     * @return \Illuminate\Http\RedirectResponse|mixed
     */
    public function view($id)
    {
        if (!$id) {
            return $this->goBack('error', __('_basic.visit-error'));
        }
        $sModel = $this->model;
        $oPermission = $sModel::find($id);
        if (!is_object($oPermission)) {
            return $this->goBack('error', __('_basic.method-error'));
        }
//        pr($oArticle);exit;
        $this->setVars('permission', $oPermission);
        return $this->render();
    }

    /**[创建]
     * @return \Illuminate\Http\RedirectResponse|mixed
     */
    public function create()
    {
        if (Request::isMethod('post')) {
            $aData = trimArray(Input::all());
            $sModel = $this->model;
            $validate = Validator::make($aData, $sModel::$rules);
            if (!$validate->passes()) {
                return $this->goBack('error', __('_basic.validate-error'));
            }
            $oPermission = $sModel->saveContent(new Permission(), $aData);
            if (!is_object($oPermission)) {
                return $this->goBack('error', __('_basic.permission-exist'));
            }
            if ($bSucc = $oPermission->save()) {
                return $this->goBackToIndex('success', __('_user.permission-create-success'));
            } else {
                return $this->goBack('error', __('_user.permission-create-error'));
            }
        }
        return $this->render();
    }

    /** [删除]
     * @param null $ids
     * @return \Illuminate\Http\RedirectResponse
     */
    public function destroy($ids)
    {
        $bSucc = $this->delete($ids);
        return $bSucc ? $this->goBackToIndex('success', __('_user.permission-destroy-success')) :
            $this->goBack('error', __('_user.permission-destroy-error'));
    }
}